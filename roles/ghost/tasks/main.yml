- name: Get database pods
  k8s_info:
    namespace: default
    kind: Pod
    label_selectors:
      - app=mysql
  register: pod_list


- name: Create a Deployment object for Ghost app
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Deployment
      metadata:
        name: ghost-deployment
        namespace: default
        labels:
          app: ghost
          tier: app
      spec:
        selector:
          matchLabels:
            app: ghost
        strategy:
          type: Recreate
        template:
          metadata:
            labels: 
              app: ghost
              tier: app
          spec:
            containers:
            - name: ghost
              image: ghost:5.14.1
              env:
              - name: NODE_EN
                value: production
              - name: url
                value: http://{{ ghost_ip }}:{{ ghost_port }}/
              - name: database__connection__host
                value: mysql-service
              - name: database__connection__user
                value: "ghostuser"
              - name: database__connection__password
                value: "ghostpass"
              - name: database__connection__database
                value: "ghostdb"
              - name:  mail__transport
                value: SMTP
              - name: mail__options__secure
                value: "false"
              - name: mail__options__service
                value: "Mailtrap"
              - name: mail__options__host
                value: "smtp.mailtrap.io"
              - name: mail__options__port
                value: "587"
              - name: mail__options__auth__user
                value: "6657010549dfd1"
              - name: mail__options__auth__pass
                value: "b5d62231f03727"              
              ports:
              - containerPort: 2368
    wait: yes
    wait_condition:
      type: Progressing
      status: True
      reason: NewReplicaSetAvailable


- name: Create a Service for Ghost
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: ghost-service
        namespace: default
        labels:
          app: ghost
          tier: app
      spec:
        type: LoadBalancer
        selector:
          app: ghost
        ports:
          - port: 30007
            targetPort: 2368
    wait: yes
    wait_sleep: 10
    wait_timeout: 360


- name: Get an existing Service object
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: ghost-service
    namespace: default
  register: ghost_service
  until: "ghost_service.resources[0].status.loadBalancer.ingress is defined"
  delay: 15
  retries: 3


- debug: 
    msg: "{{ ghost_service.resources[0].status.loadBalancer.ingress[0].ip }}"


- name: replace line
  lineinfile: 
    path: inventory/gcp.yml
    regexp: '^(\s*ghost_ip:)' 
    line: '\1 {{ ghost_service.resources[0].status.loadBalancer.ingress[0].ip }}'
    backrefs: yes


- name: Create a blog administrator in the database
  kubernetes.core.k8s_exec:
    namespace: default
    pod: "{{ pod_list.resources[0].metadata.name | regex_replace('[\"]') }}"
    command: "mysql -u ghostuser -pghostpass -D ghostdb -e \"update users set name='ascn', password='{{ password_user }}', email='ascn@example.com', status='active' where id=1\";"